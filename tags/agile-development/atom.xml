<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Agile Development | The Land of Shattered Dreams]]></title>
  <link href="http://www.landofshattereddreams.com/tags/agile-development/atom.xml" rel="self"/>
  <link href="http://www.landofshattereddreams.com/"/>
  <updated>2014-03-20T10:47:21+00:00</updated>
  <id>http://www.landofshattereddreams.com/</id>
  <author>
    <name><![CDATA[Andrew Braithwaite]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[The Hut Group's first Code Dojo ]]></title>
    <link href="http://www.landofshattereddreams.com/blog/2012/05/16/the-hut-groups-first-code-dojo/"/>
    <updated>2012-05-16T21:03:02+01:00</updated>
    <id>http://www.landofshattereddreams.com/blog/2012/05/16/the-hut-groups-first-code-dojo</id>
    <content type="html"><![CDATA[<p><img class="left" src="/images/logos/dojo.jpg"></p>

<p>A couple of years ago, one of our technical architects at the Hut Group ran a few code dojos to give the team experience of TDD and Pair Programming. The team has grown massively in the meantime, so I thought it would be a good opportunity to try it again.</p>

<p>To quote from <a href="http://codingdojo.org/">codingdojo.org</a>, a dojo is:</p>

<blockquote>
  <p>…a meeting where a bunch of coders get together to work on a programming challenge. They are there to have fun and to engage in <a href="http://codingdojo.org/cgi-bin/wiki.pl?DeliberatePractice">DeliberatePractice</a> in order to improve their skills.</p>
</blockquote>

<p>So, I booked the boardroom, setup an Intellij project on my MacBook and waited for the developers to arrive. In the end about 10 people came, with a range of development experience from less than a year, to more than we’d care to admit to.</p>

<p>The exercise I chose for the group was to implement the “fizz buzz” game. Basically for a given natural number greater zero return</p>

<ul>
  <li>
    <p>“fizz” if the number is divisible by 3</p>
  </li>
  <li>
    <p>“buzz” if the number is divisible by 5</p>
  </li>
  <li>
    <p>“fizzbuzz” if the number is divisible by both 3 and 5</p>
  </li>
  <li>
    <p>otherwise return the number</p>
  </li>
</ul>

<p>The first comedy moment was when we went round the table and tried to play “fizz buzz”. You’d have thought a group of highly skilled IT professionals would be able to do simple mental arithmetic, but this is apparently not the case…</p>

<p>The problem itself isn’t all that complicated, a decent developer could write the code in 5 minutes, but the point of the exercise isn’t really the end solution. More important is how you get to it. A pair of developers worked at the laptop. The driver types, focuses on tactics and writing clean code that compiles and runs. The navigator focuses on strategy. How the code fits into the overall design, which tests will drive the code forward, and which refactorings will improve the entire codebase.</p>

<p>We also wanted to build the solution using Test Driven Development. You write a test that fails, write some code to make it pass and then refactor. With a problem this simple it is quite difficult to force yourself to follow these steps.</p>

<p>We started with the simplest case we could think of, i.e. if you pass in 1, you get 1 back and built from there. We managed 7 iterations in the time we had available and got to a reasonable solution.</p>

<p>Going through the exercise prompted a lot of interesting debate. We talked about how you identify test cases, different ways of implementing the algorithm and even got into some OO design. I think the group found the exercise useful, I guess the proof will be when I see how many people come to the second code dojo.</p>

<p>There was one thing that I didn’t think worked too well. The navigator didn’t really get to contribute as the entire group chipped in ideas so effectively we had 10 navigators, but I’m not sure if this wasn’t a good thing.</p>

<p>Next time I may try using <a href="http://www.cyber-dojo.com/">cyber-dojo</a> which would allow pairs to work at the same time. It is a pretty neat site where you select a exercise and can code it online in a huge number of languages. One thing it does prove is that Java is a bit of a nightmare without an IDE, Ruby is the future!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[YAGNI]]></title>
    <link href="http://www.landofshattereddreams.com/blog/2011/03/25/yagni/"/>
    <updated>2011-03-25T00:02:37+00:00</updated>
    <id>http://www.landofshattereddreams.com/blog/2011/03/25/yagni</id>
    <content type="html"><![CDATA[<p>YAGNI or You Ain’t Going To Need It - the battle cry of the committed agilista. Software developers, myself included, have a rather annoying tendency to over engineer their solutions. We sit there thinking that with a little bit of extra effort we can build a framework or make the code easily extensible so that when the next problem comes along it will take us no time at all to build a solution.</p>

<p>There just two problems:</p>

<ul>
  <li>It never takes a little bit of effort</li>
  <li>The “extensible” code you build is never that extensible - it never fits tomorrow’s problem</li>
</ul>

<p>Hence YAGNI! You build enough to solve today’s problem, and worry about tomorrow’s problem tomorrow.</p>

<p>Why am I blogging about YAGNI? As <a href="http://typingincolor.com/2011/03/andrew-braithwaite/my-first-rails-app/">previously mentioned</a> I have been writing a skills matrix application for work so I can track the level of skill in my team over time. I have high hopes of building an all singing, all dancing system in ruby on rails that will be all things to all men. Unfortunately, I want to know what we know today not in six months. So I built a version that did the bare minimum and released it. I started with collecting the data, I’ve now added a report and will start tracking changes next. I’ve not really worried about how I’m going to build the new functionality and I’m hoping it will all come out in the wash.</p>

<p>Now I could be wrong about YAGNI, it may turn out that I did need it after all. But if worst comes to the worst, I’ve got the data, I’ve learnt a lot of ruby and the next version of skillz will be better. I’m pretty confident I can make it all work, and I’m really good a data migrations if it doesn’t. I can always use Excel if I have to…</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Art of Agile Development - Shore & Warden]]></title>
    <link href="http://www.landofshattereddreams.com/blog/2010/06/08/the-art-of-agile-development-shore-warden/"/>
    <updated>2010-06-08T10:08:13+01:00</updated>
    <id>http://www.landofshattereddreams.com/blog/2010/06/08/the-art-of-agile-development-shore-warden</id>
    <content type="html"><![CDATA[<p><img class="left" src="/images/the-art-of-agile-development-shore-warden/art-of-agile-development.jpg">
We’re slowly introducing Agile Development at work to help us deliver the systems the business needs to continue our impressive growth.</p>

<p>We’re probably going to end up with a mixture of Scrum and XP, and although we’ve only just started we’re beginning to see the benefit in that we have a long term plan agreed with the business which we are now delivering to.</p>

<p>The Art of Agile Development is an excellent book explaing how Agile Development, and specifically XP can help you. It explains all the XP practices, how to implement them and how they all fit together. The process outlined in the book won’t work for everyone, but I think everybody can learn something from it. Some of the things mentioned are just common sense and best practice anyway, but some of it is quite counter-intuative.</p>

<p>I found the book really interesting and we’re slowly introducing some of the practices. I recommend it to anybody who is interested in Agile Development.</p>

<p><a href="http://www.amazon.co.uk/Art-Agile-Development-James-Shore/dp/0596527675">Buy now from amazon.co.uk</a></p>

]]></content>
  </entry>
  
</feed>
