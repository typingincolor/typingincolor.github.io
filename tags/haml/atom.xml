<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: haml | The Land of Shattered Dreams]]></title>
  <link href="http://www.landofshattereddreams.com/tags/haml/atom.xml" rel="self"/>
  <link href="http://www.landofshattereddreams.com/"/>
  <updated>2014-05-16T10:54:55+01:00</updated>
  <id>http://www.landofshattereddreams.com/</id>
  <author>
    <name><![CDATA[Andrew Braithwaite]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Trying haml, coffeescript, ruby and sinatra]]></title>
    <link href="http://www.landofshattereddreams.com/blog/2012/05/31/trying-haml-coffeescript-ruby-and-sinatra/"/>
    <updated>2012-05-31T18:22:51+01:00</updated>
    <id>http://www.landofshattereddreams.com/blog/2012/05/31/trying-haml-coffeescript-ruby-and-sinatra</id>
    <content type="html"><![CDATA[<p>I am looking at ways that I can build a web front-end for a system I am going to develop at work. Basically, I want to have a number of web services that will provide the data and then write a front end in html and java script to consume these services and display the data to a user.</p>

<p>I’m not a javascript expert, can do a bit of html and really didn’t want to do use java as it isn’t the quickest thing develop a prototype.</p>

<p>In the end I chose <a href="http://www.sinatrarb.com/">Sinatra</a>, a DSL for quickly creating web applications in Ruby with minimal effort. It is stupidly easy to create a web application! For example:</p>

<p>``` ruby
require ‘sinatra’</p>

<p>get ‘/hi’ do
    “Hello World!”
```</p>

<p>Will return “Hello World!” when you go to http://localhost:4567/hi. I used the ROXML gem to squirt out an xml representation of a ruby object and I had a web service in around 30 lines of ruby.</p>

<p>So I had my web service up and running. Now to consume it… As I’ve mentioned before, I like <a href="http://twitter.github.com/bootstrap/">bootstrap</a> as it is really easy to write a good looking interface without having to know loads of CSS. HTML is ok, but it can look a bit of a mess, so I decided to use <a href="http://haml.info/">Haml</a>. It gets transformed into html, but it makes your markup look beautiful. Using it you have to go out of your way to write nasty html. Indentation is significant (a la python) so you have to right it neatly!</p>

<p>The final piece of the jigsaw is <a href="http://coffeescript.org/">coffeescript</a>, a little language that compile into javascript. The aim of coffeescript is to expose the good bits of javascript in a simple way. I like it because it removes the need for endless curly brackets and the function keyword.</p>

<p>All in all, I’m pretty pleased with the results. None of it is earth shattering, but the progress bars are pretty neat and I like the way I’ve built the results table.</p>

<p>If you want to see the code, you can clone it using git </p>

<p><code>
    git clone https://bitbucket.org/typingincolor/ajax-prototype.git
</code></p>
]]></content>
  </entry>
  
</feed>
